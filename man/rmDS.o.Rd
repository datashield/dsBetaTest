% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rmDS.o.R
\name{rmDS.o}
\alias{rmDS.o}
\title{rmDS.o an aggregate function called by ds.rm.o}
\usage{
rmDS.o(x.name.transmit)
}
\arguments{
\item{x.name.transmit, }{the name of the object to be deleted converted
into transmissable form. The argument is specified via the <x.name>
argument of ds.rm.o}
}
\value{
the specified object is deleted from the serverside. If this
is successful the message "Object <x.name> successfully deleted" is returned
to the clientside (where x.name is the name of the object to be deleted).
If the object to be deleted is already absent on a given
source, that source will return the message: "Object to be deleted, i.e. <x.name> ,
does not exist so does not need deleting". Finally, if the specified name
of the object to be deleted is too long (>nfilter.stringShort) there is
a potential disclosure risk (active code hidden in the name) and the
rmDS.o returns a message such as: "Disclosure risk, number of characters
in x.name must not exceed nfilter.stringShort which is currently set at: 25" where
'25' is the current setting of the R_Option value of nfilter.stringShort.
}
\description{
deletes an R object on the serverside
}
\details{
this is a serverside function
based on the rm() function in native R. It is an aggregate function
which may be surprising because it modifies an object
on the serverside, and would therefore be expected to be an assign function.
However, as an assign function the last step in running it
would be to write the modified object as newobj. But this would
fail because the effect of the function is to delete the object and so
it would be impossible to write it anywhere.
}
\author{
Paul Burton for DataSHIELD Development Team
}
